# Generated by Django 5.1.3 on 2024-11-24 20:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('setup', '0016_remove_taxcode_company_remove_taxcode_created_by_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='TaxCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50)),
                ('rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('name', models.CharField(max_length=100)),
                ('sequence', models.IntegerField(default=0)),
                ('include_exclude', models.CharField(choices=[('Include', 'Include'), ('Exclude', 'Exclude')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='TaxCodecompany', to='setup.company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='TaxCode_created_by', to=settings.AUTH_USER_MODEL)),
                ('locations', models.ManyToManyField(related_name='TaxCodelocations', to='setup.companylocation')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='TaxCode_updated_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tax Code',
                'verbose_name_plural': 'Tax Codes',
                'unique_together': {('code', 'company')},
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_code', models.CharField(max_length=50, unique=True, verbose_name='Service Code')),
                ('service_name', models.CharField(max_length=250, verbose_name='Service Name')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Rate')),
                ('cost_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Cost Price')),
                ('minimum_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Minimum Price')),
                ('item_barcode', models.CharField(max_length=100, verbose_name='Item Barcode')),
                ('rate_per_day', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Rate Per Day')),
                ('remarks', models.TextField(blank=True, default='', null=True, verbose_name='Remarks')),
                ('print_lab_note', models.BooleanField(default=False, verbose_name='Print Laboratory Note')),
                ('highlight_in_diagnosis_sheet', models.BooleanField(default=False, verbose_name='Highlight in Diagnosis Sheet')),
                ('allowed_discount', models.BooleanField(default=False, verbose_name='Allowed Discount')),
                ('max_allowed_discount', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=5, null=True, verbose_name='Max Allowed Discount (%)')),
                ('include_tax', models.BooleanField(default=False, verbose_name='Is Tax Included')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_company', to='setup.company')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_created_by', to=settings.AUTH_USER_MODEL)),
                ('departments', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_departments', to='setup.department', verbose_name='Associated Departments')),
                ('laboratory_departments', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='laboratory_departments', to='setup.laboratorydepartment', verbose_name='Associated Laboratory Departments')),
                ('locations', models.ManyToManyField(related_name='service_locations', to='setup.companylocation')),
                ('updated_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_updated_by', to=settings.AUTH_USER_MODEL)),
                ('tax_code', models.ManyToManyField(related_name='service_taxes', to='setup.taxcode', verbose_name='Tax Code(s)')),
            ],
            options={
                'verbose_name': 'Service Registration',
                'verbose_name_plural': 'Service Registrations',
                'unique_together': {('service_code', 'company')},
            },
        ),
    ]
