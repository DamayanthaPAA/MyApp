# Generated by Django 5.1.3 on 2024-11-24 15:24

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('setup', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Location Name')),
                ('code', models.CharField(help_text='Unique identifier for this location', max_length=50, unique=True, verbose_name='Location Code')),
                ('contact_person', models.CharField(max_length=255, verbose_name='Contact Person')),
                ('contact_email', models.EmailField(max_length=254, verbose_name='Contact Email')),
                ('contact_phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Contact Phone')),
                ('address_line1', models.CharField(max_length=255, verbose_name='Address Line 1')),
                ('address_line2', models.CharField(blank=True, max_length=255, verbose_name='Address Line 2')),
                ('city', models.CharField(max_length=100, verbose_name='City')),
                ('state', models.CharField(max_length=100, verbose_name='State/Province')),
                ('country', models.CharField(max_length=100, verbose_name='Country')),
                ('postal_code', models.CharField(max_length=20, verbose_name='Postal Code')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('operating_hours', models.JSONField(blank=True, help_text='Store opening hours in JSON format', null=True, verbose_name='Operating Hours')),
                ('status', models.CharField(choices=[('AC', 'Active'), ('IN', 'Inactive'), ('TP', 'Temporary'), ('UM', 'Under Maintenance')], default='AC', max_length=2, verbose_name='Status')),
                ('is_headquarters', models.BooleanField(default=False, verbose_name='Is Headquarters')),
                ('notes', models.TextField(blank=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='setup.company', verbose_name='Company')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='locations_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='locations_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company Location',
                'verbose_name_plural': 'Company Locations',
                'ordering': ['company', 'name'],
                'permissions': [('can_change_status', 'Can change location status'), ('can_mark_headquarters', 'Can mark location as headquarters')],
            },
        ),
        migrations.CreateModel(
            name='LocationAuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50)),
                ('field_name', models.CharField(blank=True, max_length=100)),
                ('old_value', models.TextField(blank=True, null=True)),
                ('new_value', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.CharField(blank=True, max_length=255)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='audit_logs', to='setup.companylocation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='location_audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='LocationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Type Name')),
                ('is_internal', models.BooleanField(default=True, help_text='Whether this is an internal or external location type', verbose_name='Is Internal')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='location_types_created', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='location_types_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Location Type',
                'verbose_name_plural': 'Location Types',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='companylocation',
            name='location_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='locations', to='setup.locationtype', verbose_name='Location Type'),
        ),
        migrations.AddIndex(
            model_name='companylocation',
            index=models.Index(fields=['company', 'status'], name='setup_compa_company_791dfa_idx'),
        ),
        migrations.AddIndex(
            model_name='companylocation',
            index=models.Index(fields=['code'], name='setup_compa_code_02c884_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='companylocation',
            unique_together={('company', 'name')},
        ),
    ]
